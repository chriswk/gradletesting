apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'scala'
apply plugin: 'project-report'

sourceCompatability = javaVersion
targetCompatability = javaVersion

repositories {
    mavenCentral()
    maven {
      url "http://m2repo.spockframework.org/snapshots"
    }
    maven {
      url "http://m2repo.spockframework.org/releases"
    }
    maven {
      url "http://oss.sonatype.org/content/repositories/releases"
    }
}

dependencies {
    //Scala dependencies
    scalaTools group: 'org.scala-lang', name:'scala-compiler', version: scalaVersion
    scalaTools group: 'org.scala-lang', name:'scala-library', version: scalaVersion
    compile group:'org.scala-lang', name:'scala-library', version: scalaVersion

    //Scalatest testing
    testCompile group: 'org.scalatest', name: "scalatest_${scalaVersion}", version: '1.7.1'

    //Groovy library
    groovy group:'org.codehaus.groovy', name: 'groovy', version: groovyVersion
    //Spock testing
    testCompile group:'org.spockframework', name:'spock-core', version:'0.6-groovy-1.8-SNAPSHOT'

    //Test dependencies
    //JUnit testing
    testCompile group:'junit', name: 'junit', version:'4.10'

}

downloadSdk = true
//Add wrapper task to automatically create gradlew
task wrapper(type: Wrapper, description: "Creates Gradle wrapper") {
    gradleVersion = desiredGradleVersion
}

task scalatest(dependsOn: testClasses, description: "Run ScalaTest runner") {
    ant.taskdef(
        name:'scalatest',
        classname: 'org.scalatest.tools.ScalaTestAntTask',
        classpath: sourceSets.test.runtimeClasspath.asPath
    )
    ant.scalatest(
        runpath: sourceSets.test.output.classesDir,
        haltonfailure: 'true',
        fork: 'false'
    ) {
        reporter(type: 'stdout')
        reporter(type: 'junitxml', directory: testResultsDir)
    }
}

